[{"name":"fun <R : UpdatableRecord<R>> DSLContext.insert(record: UpdatableRecord<R>): InsertSetMoreStep<R>","description":"ls.jooq.prepare.insert","location":"lovely-jooq/ls.jooq.prepare/insert.html","searchKeys":["insert","fun <R : UpdatableRecord<R>> DSLContext.insert(record: UpdatableRecord<R>): InsertSetMoreStep<R>","ls.jooq.prepare.insert"]},{"name":"fun <R : UpdatableRecord<R>> DSLContext.update(record: R): UpdateQuery<R>","description":"ls.jooq.prepare.update","location":"lovely-jooq/ls.jooq.prepare/update.html","searchKeys":["update","fun <R : UpdatableRecord<R>> DSLContext.update(record: R): UpdateQuery<R>","ls.jooq.prepare.update"]},{"name":"fun <T : Temporal> Field<T>.minusDays(days: Int): Field<T>","description":"ls.jooq.field.minusDays","location":"lovely-jooq/ls.jooq.field/minus-days.html","searchKeys":["minusDays","fun <T : Temporal> Field<T>.minusDays(days: Int): Field<T>","ls.jooq.field.minusDays"]},{"name":"fun <T : Temporal> Field<T>.minusMonths(months: Int): Field<T>","description":"ls.jooq.field.minusMonths","location":"lovely-jooq/ls.jooq.field/minus-months.html","searchKeys":["minusMonths","fun <T : Temporal> Field<T>.minusMonths(months: Int): Field<T>","ls.jooq.field.minusMonths"]},{"name":"fun <T : Temporal> Field<T>.plusDays(days: Int): Field<T>","description":"ls.jooq.field.plusDays","location":"lovely-jooq/ls.jooq.field/plus-days.html","searchKeys":["plusDays","fun <T : Temporal> Field<T>.plusDays(days: Int): Field<T>","ls.jooq.field.plusDays"]},{"name":"fun <T : Temporal> Field<T>.plusMonths(months: Int): Field<T>","description":"ls.jooq.field.plusMonths","location":"lovely-jooq/ls.jooq.field/plus-months.html","searchKeys":["plusMonths","fun <T : Temporal> Field<T>.plusMonths(months: Int): Field<T>","ls.jooq.field.plusMonths"]},{"name":"fun Field<*>.containedIn(values: Collection<*>): Condition","description":"ls.jooq.field.containedIn","location":"lovely-jooq/ls.jooq.field/contained-in.html","searchKeys":["containedIn","fun Field<*>.containedIn(values: Collection<*>): Condition","ls.jooq.field.containedIn"]},{"name":"fun Field<*>.regexpMatches(regex: String, flags: String): Field<Array<String>?>","description":"ls.jooq.field.regexpMatches","location":"lovely-jooq/ls.jooq.field/regexp-matches.html","searchKeys":["regexpMatches","fun Field<*>.regexpMatches(regex: String, flags: String): Field<Array<String>?>","ls.jooq.field.regexpMatches"]},{"name":"fun Instant.asTSField(): Field<OffsetDateTime>","description":"ls.jooq.field.asTSField","location":"lovely-jooq/ls.jooq.field/as-t-s-field.html","searchKeys":["asTSField","fun Instant.asTSField(): Field<OffsetDateTime>","ls.jooq.field.asTSField"]},{"name":"fun Logger.traceSQL(query: AttachableQueryPart, name: String = \"QUERY\")","description":"ls.jooq.util.traceSQL","location":"lovely-jooq/ls.jooq.util/trace-s-q-l.html","searchKeys":["traceSQL","fun Logger.traceSQL(query: AttachableQueryPart, name: String = \"QUERY\")","ls.jooq.util.traceSQL"]},{"name":"fun Record.valuesChanged(): Boolean","description":"ls.jooq.prepare.valuesChanged","location":"lovely-jooq/ls.jooq.prepare/values-changed.html","searchKeys":["valuesChanged","fun Record.valuesChanged(): Boolean","ls.jooq.prepare.valuesChanged"]},{"name":"fun addConditions(query: UpdateQuery<*>, record: Record, vararg keys: Field<*>)","description":"ls.jooq.prepare.addConditions","location":"lovely-jooq/ls.jooq.prepare/add-conditions.html","searchKeys":["addConditions","fun addConditions(query: UpdateQuery<*>, record: Record, vararg keys: Field<*>)","ls.jooq.prepare.addConditions"]},{"name":"inline fun <T : Any> Record.mapTo(): T","description":"ls.jooq.cast.mapTo","location":"lovely-jooq/ls.jooq.cast/map-to.html","searchKeys":["mapTo","inline fun <T : Any> Record.mapTo(): T","ls.jooq.cast.mapTo"]},{"name":"inline fun <T, R : Record> Publisher<R>.asFlowOf(): Flow<T>","description":"ls.jooq.execute.asFlowOf","location":"lovely-jooq/ls.jooq.execute/as-flow-of.html","searchKeys":["asFlowOf","inline fun <T, R : Record> Publisher<R>.asFlowOf(): Flow<T>","ls.jooq.execute.asFlowOf"]},{"name":"inline fun <T> Field<*>.castAs(): Field<T>","description":"ls.jooq.cast.castAs","location":"lovely-jooq/ls.jooq.cast/cast-as.html","searchKeys":["castAs","inline fun <T> Field<*>.castAs(): Field<T>","ls.jooq.cast.castAs"]},{"name":"inline suspend fun <R : UpdatableRecord<R>> DSLContext.create(init: R.() -> Unit = {}): R","description":"ls.jooq.execute.create","location":"lovely-jooq/ls.jooq.execute/create.html","searchKeys":["create","inline suspend fun <R : UpdatableRecord<R>> DSLContext.create(init: R.() -> Unit = {}): R","ls.jooq.execute.create"]},{"name":"inline suspend fun <T, R : Record> Publisher<R>.awaitAll(): List<T>","description":"ls.jooq.execute.awaitAll","location":"lovely-jooq/ls.jooq.execute/await-all.html","searchKeys":["awaitAll","inline suspend fun <T, R : Record> Publisher<R>.awaitAll(): List<T>","ls.jooq.execute.awaitAll"]},{"name":"suspend fun <R : UpdatableRecord<R>> DSLContext.updateAndExecute(record: R): Int","description":"ls.jooq.execute.updateAndExecute","location":"lovely-jooq/ls.jooq.execute/update-and-execute.html","searchKeys":["updateAndExecute","suspend fun <R : UpdatableRecord<R>> DSLContext.updateAndExecute(record: R): Int","ls.jooq.execute.updateAndExecute"]},{"name":"suspend fun <R : UpdatableRecord<R>> DSLContext.updateIfChangedAndExecute(record: R): Int?","description":"ls.jooq.execute.updateIfChangedAndExecute","location":"lovely-jooq/ls.jooq.execute/update-if-changed-and-execute.html","searchKeys":["updateIfChangedAndExecute","suspend fun <R : UpdatableRecord<R>> DSLContext.updateIfChangedAndExecute(record: R): Int?","ls.jooq.execute.updateIfChangedAndExecute"]},{"name":"suspend fun <T : Any> Publisher<Record1<T>>.awaitFirst(): T","description":"ls.jooq.execute.awaitFirst","location":"lovely-jooq/ls.jooq.execute/await-first.html","searchKeys":["awaitFirst","suspend fun <T : Any> Publisher<Record1<T>>.awaitFirst(): T","ls.jooq.execute.awaitFirst"]},{"name":"suspend fun <T : Any> Publisher<Record1<T>>.awaitFirstOrNull(): T?","description":"ls.jooq.execute.awaitFirstOrNull","location":"lovely-jooq/ls.jooq.execute/await-first-or-null.html","searchKeys":["awaitFirstOrNull","suspend fun <T : Any> Publisher<Record1<T>>.awaitFirstOrNull(): T?","ls.jooq.execute.awaitFirstOrNull"]},{"name":"suspend fun <T : Any> Publisher<Record1<T>>.awaitListOfFirsts(): List<T>","description":"ls.jooq.execute.awaitListOfFirsts","location":"lovely-jooq/ls.jooq.execute/await-list-of-firsts.html","searchKeys":["awaitListOfFirsts","suspend fun <T : Any> Publisher<Record1<T>>.awaitListOfFirsts(): List<T>","ls.jooq.execute.awaitListOfFirsts"]}]
